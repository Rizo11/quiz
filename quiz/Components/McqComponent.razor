@using Entity
@using Markdig;
@using Microsoft.AspNetCore.Components;
@* @using TestCreater.Models; *@
<div class="card text-white bg-dark mb-3" style="max-width: 35rem;">
  <div class="card-header">Ilmhub</div>
  <div class="card-body">
    <h5 class="card-title">To'g'ri javoblarni tanlang</h5>
    <p class="card-text">@((MarkupString) Preview(question.QuestionText))</p>

    @foreach (var choise in question.Answers)
    {
        <form class="was-validated">
          <div class="form-group">
            <div class="form-check">
              @* @if(Submitted)
              {
                <input type="checkbox" @onchange="eventArgs => { CheckboxClicked(choise.Key, choise.Value, eventArgs.Value); }" disabled/> @((MarkupString) Preview(choise.Key))<br />
              }
              else
              {
                <input type="checkbox" @onchange="eventArgs => { CheckboxClicked(choise.Key, choise.Value, eventArgs.Value); }"/> @((MarkupString) Preview(choise.Key))<br />
              } *@
              <input type="checkbox" @onchange="eventArgs => { CheckboxClicked(choise.Key, choise.Value, eventArgs.Value); }"/> @((MarkupString) Preview(choise.Key))<br />

            </div>
          </div>
        </form>
    }
    @if (Submitted)
    {
      <button type="button" disabled> Submit</button>
    }
    else
    {
      <button type="button" @onclick="() => Submit()"> Submit</button>
    }

  </div>
</div>

@code {

  [Parameter]
  public EventCallback<int> OnClickCallback { get; set; }
  
  [Parameter]
  public Question question { get; set; } = new();
  public bool Submitted { get; set; }


  public List<string> UAnswers { get; set; } = new List<string>();
  public int Result { get; set; } = 0;
  public string Preview(string text) => Markdown.ToHtml(text);
  public void CheckboxClicked(string key, bool val, object checkedValue)
  {
      if ((bool)checkedValue)
      {
          if (val && !UAnswers.Contains(key))
          {
            UAnswers.Add(key);
            Result++;
          }
      }
      else
      {
          if (UAnswers.Contains(key))
          {
              UAnswers.Remove(key);
              Result--;
          }
      }
  }

  public void Submit()
  {
      if (!Submitted)
      {
        Submitted = true;
        OnClickCallback.InvokeAsync(Result);
      }
  }
}